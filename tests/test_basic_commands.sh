#!/bin/bash

# =========================================================================
#                        TEST: COMANDOS B√ÅSICOS  
# =========================================================================

echo "üß™ TESTING: Comandos b√°sicos (sin pipes)"
echo "========================================="

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Funci√≥n para mostrar test
show_test() {
    echo -e "\n${BLUE}üìã Test: $1${NC}"
    echo "----------------------------------------"
}

# Funci√≥n para comparar resultados con timeout
compare_outputs() {
    local test_name="$1"
    local commands="$2"
    
    echo -e "${YELLOW}Comando(s):${NC} $commands"
    
    # Ejecutar en bash
    echo -e "\n${BLUE}üêö BASH:${NC}"
    bash_output=$(echo -e "$commands" | bash 2>&1)
    echo "$bash_output"
    
    # Ejecutar en minishell con timeout manual
    echo -e "\n${BLUE}üîß MINISHELL:${NC}"
    
    # Crear timeout manual para macOS
    (
        sleep 8 && pkill -f "../minishell.*$commands" 2>/dev/null
    ) &
    timeout_pid=$!
    
    minishell_output=$(echo -e "$commands\nexit" | ../minishell 2>&1 | grep -v "Welcome to Minishell!" | grep -v "#" | grep -v "‚îÇ" | grep -v "‚ï≠" | grep -v "‚ïØ" | grep -v "‚ï∞" | grep -v "‚îÉ" | grep -v "‚îè" | grep -v "‚îó" | sed '/^$/d' | tail -n +2)
    
    # Matar timeout si el comando termin√≥
    kill $timeout_pid 2>/dev/null
    wait $timeout_pid 2>/dev/null
    
    if [ -z "$minishell_output" ]; then
        echo -e "${RED}‚è∞ Sin output - posible timeout o cuelgue${NC}"
    else
        echo "$minishell_output" | sed '$d'  # Eliminar √∫ltima l√≠nea (compatible con macOS)
    fi
    
    echo -e "\n${GREEN}‚úì Test completado${NC}"
    echo "========================================="
}

# Verificar que minishell existe
if [ ! -f "../minishell" ]; then
    echo -e "${RED}‚ùå Error: ../minishell no encontrado. Ejecuta 'make' primero.${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Minishell encontrado${NC}\n"

# Tests
show_test "Comando simple (ls)"
compare_outputs "ls simple" "ls"

show_test "Comando con argumentos (ls -la)"
compare_outputs "ls con flags" "ls -la"

show_test "Comando echo b√°sico"
compare_outputs "echo" "echo Hello World"

show_test "Comando pwd"
compare_outputs "pwd" "pwd"

show_test "Comando que no existe"
compare_outputs "comando inexistente" "comando_que_no_existe"

show_test "Comando cat con archivo"
compare_outputs "cat README" "cat README.md"

show_test "Comando simple con argumentos"
compare_outputs "echo args" "echo uno dos tres"

echo -e "\n${GREEN}üéâ TODOS LOS TESTS DE COMANDOS B√ÅSICOS COMPLETADOS${NC}"
